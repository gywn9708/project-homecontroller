<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/dtd/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.bootreact.hmct.mapper.ProductMapper">
	<select id="getMainProductList" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , MIN(B.COMMON_CODE)
	]]>
		                 <!-- , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME -->
	<![CDATA[
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						group by A.PRODUCT_NO
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
      ]]>
	</select>
	
	<select id="getMainProductImageList" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
	]]>
	</select>
	
	<select id="getAdminProductList" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
	</select>
	
	
	<select id="getProduct" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
						  AND A.PRODUCT_NO = #{productNo}
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
	</select>
	
	<!-- 제품번호를 넘겨서 이미지 조회(컬러 구분 x) -->
	<select id="getProductImage" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
			WHERE PRODUCT_NO = #{productNo}
	]]>
	</select> 
	
	
	<!-- 제품번호, 커먼코드 둘 다 넘겨서 이미지 조회(컬러 구분 o)-->
	<select id="getProductWithCommonCode" parameterType="Map" resultType="camelHashMap">
	<![CDATA[
		SELECT A. *,
		       B. COMMON_CODE_NAME
			FROM T_HMCT_PRODUCT_IMAGE A,
		         T_HMCT_COMMON B
			WHERE PRODUCT_NO = #{productNo}			
		    AND A.COMMON_CODE = #{commonCode}
		    AND A.COMMON_CODE = B.COMMON_CODE
	]]>
	</select>
	
	
	<!-- 제품번호를 이용해서 대표 컬러(커먼코드) 1개 가져오기 -->
	<select id="getRepresentativeCommonCode" parameterType="int" resultType="String">
	<![CDATA[
		select  MIN(COMMON_CODE) as COMMON_CODE
			from t_hmct_product_optn
			where product_no = #{productNo}
	]]>
	</select>
	
	<!-- 컬러(커먼코드)별 대표사진 1개씩 가져오기 -->
	<select id="getRepresentativeImage" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT * FROM T_HMCT_PRODUCT_IMAGE
			WHERE product_no = #{productNo}
            group by common_code
	]]>
	</select>
	
	<!-- 메인 검색바 부분 -->
	<select id="getSearchProducts"  resultType="camelHashMap">
		SELECT AA.*
			FROM (
					SELECT A.*
								 , B.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
								 , C.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
                                 , D.COMMON_CODE
                                 , D.COMMON_CODE_NAME
								FROM T_HMCT_PRODUCT A
								   , (
										SELECT * 
											FROM T_HMCT_COMMON
											WHERE COMMON_TYPE = 'B' 
									 ) B
								   , (
										SELECT * 
											FROM T_HMCT_COMMON
											WHERE COMMON_TYPE = 'C' 
									 ) C
								   , (
										 SELECT E.COMMON_CODE
											  , E.PRODUCT_NO
											  , F.COMMON_CODE_NAME
											FROM T_HMCT_PRODUCT_OPTN E
											   , T_HMCT_COMMON F
											WHERE E.COMMON_CODE = F.COMMON_CODE
									 ) D
								WHERE 1=1
								  AND A.PRODUCT_NO = D.PRODUCT_NO
								  AND A.PRODUCT_MATERIAL = B.COMMON_CODE
								  AND A.PRODUCT_CATEGORY = C.COMMON_CODE
				 ) AA
			 <if test='word != null and !("").equals(word)'>
				  WHERE AA.PRODUCT_NAME LIKE CONCAT('%', #{word}, '%')
					OR AA.PRODUCT_DETAIL LIKE CONCAT('%', #{word}, '%')
					OR AA.PRODUCT_CATEGORY IN (
												SELECT D.COMMON_CODE 
													FROM T_HMCT_COMMON D
													WHERE COMMON_TYPE = 'C' 
													  AND D.COMMON_CODE_NAME LIKE CONCAT('%', #{word}, '%')
											  )
			  </if>
	</select>
	
	
	
<!-- <상품목록 페이지> 카테고리/컬러/소재/가격별 제품목록 조회 -->
<!-- 	<select id="getProductListByFilter" parameterType="Map" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
					     , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE 1=1
			  AND AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		]]>

		<if test = "#{productCategory} != null and !('').equals(#{productCategory})">
		      AND AA.PRODUCT_CATEGORY = #{productCategory}
		</if>
		<if test = "#{commonCode} != null"> 
		      AND AA.COMMON_CODE = #{commonCode}
		</if>
		<if test = "#{productMaterial} != null">
		      AND AA.PRODUCT_MATERIAL = #{productMaterial}
		</if>
		<if test = "(#{lowestPrice} != null) and (#{highestPrice} != null)">
		      AND AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice}
		</if>
		<if test = "(#{commonCode} != null) and (#{producMaterial} != null)">
		      AND AA.COMMON_CODE = #{commonCode}
		      OR AA.PRODUCT_MATERIAL = #{productMaterial}
		</if>
		<if test = "(#{producMaterial} != null) and (#{lowestPrice} != null) and (#{highestPrice} != null)">
		      AND AA.PRODUCT_MATERIAL = #{productMaterial}
		      OR AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice}
		</if>
		<if test = "(#{producCategory} != null) and (#{lowestPrice} != null) and (#{highestPrice} != null)">
			  AND AA.COMMON_CODE = #{commonCode} 
		      OR AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice}
		</if>
		<if test = "#{commonCode} != null) and (#{productMaterial} != null) and (#{lowestPrice} != null) and (#{highestPrice} != null)">
			  AND AA.COMMON_CODE = #{commonCode} 
		      OR AA.PRODUCT_MATERIAL = #{productMaterial}
		      OR AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice}
		</if>
	</select> -->


<!-- <상품목록 페이지> 카테고리/컬러/소재/가격별 제품 이미지 목록 조회 -->
<!--  
	<select id="getProductImageListByFilter" parameterType="Map" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE;
	]]>
	</select>	
-->

	<select id="getAllProductList" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
	</select>
	
	<select id="getAllProductImageList" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
	]]>
	</select>
	
	<!-- 로그인된 유저가 해당 제품을 구매한 횟수 가져오기 -->
	<select id="getOrderHistory" resultType="int">
		SELECT COUNT(A.ORDER_NO)
			FROM T_HMCT_ORDR A
			   , T_HMCT_ORDRITEM B
			WHERE A.ORDER_NO = B.ORDER_NO
		      AND A.USER_ID = #{userId}
		      AND B.PRODUCt_NO = #{productNo}
	</select>
	
	<!-- 유저가 해당 제품을 구매했을 때의 주문번호를 리스트로 받아오기(단, 이미 리뷰 작성한 경우는 제외) -->
	<select id="getOrderNoListByProductNo" resultType="int">
		SELECT A.ORDER_NO
			FROM T_HMCT_ORDR A
			   , T_HMCT_ORDRITEM B
	           , T_HMCT_REVIEW C
			WHERE A.ORDER_NO = B.ORDER_NO
		      AND A.USER_ID = #{userId}
		      AND B.PRODUCt_NO = #{productNo}
		      AND A.ORDER_NO != C.ORDER_NO
	</select> 
	
	<!-- 유저가 해당 제품을 구매했을 때의 제품옵션(커먼코드)를 리스트로 받아오기(단, 이미 리뷰 작성한 경우는 제외) -->
	<select id="getCommonCodeListByProductNo" resultType="String">
		SELECT common_code
		FROM (
				SELECT A.ORDER_NO
					FROM T_HMCT_ORDR A
					   , T_HMCT_ORDRITEM B
			           , T_HMCT_REVIEW C
					WHERE A.ORDER_NO = B.ORDER_NO
				      AND A.USER_ID = #{userId}
				      AND B.PRODUCt_NO = #{productNo}
				      AND A.ORDER_NO != C.ORDER_NO	
			) A
		,	 t_hmct_ordritem B
		where A.order_no = B.order_no
		and B.product_no = #{productNo}
	</select>

	<select id="getSearchProductImageList" parameterType="map" resultType="camelHashMap">
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
			WHERE PRODUCT_NO IN
			<foreach collection="productNoArr" item="arr" open="(" close=")" separator=",">
				#{arr}
			</foreach>
	</select>
	
	<select id="getProductCategoryList" parameterType="string"  resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
			<if test='code != null and !("").equals(code)'>
				AND AA.PRODUCT_CATEGORY = #{code}
			</if>
	</select>
	
	<delete id="deleteProductOption" parameterType="map">
	<![CDATA[
		DELETE
			FROM T_HMCT_PRODUCT_OPTN
			WHERE PRODUCT_NO = #{productNo}
			  AND COMMON_CODE = #{commonCode}
	]]>
	</delete>
		
	<select id="getProductOptionCnt" parameterType="map" resultType="int">
		SELECT COUNT(*)
			FROM T_HMCT_PRODUCT_OPTN
			WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<delete id="deleteProduct" parameterType="map">
	<![CDATA[
		DELETE
			FROM T_HMCT_PRODUCT
			WHERE PRODUCT_NO = #{productNo}
	]]>
	</delete>
</mapper>


